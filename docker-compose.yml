services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: on-failure:5
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  cloudflared:
    image: cloudflare/cloudflared:latest
    # Free, temporary trycloudflare.com URL (no Cloudflare account needed)
    # f√ºr sevenio command: tunnel --metrics localhost:0 --no-autoupdate --url http://app:${PORT}
    ##command: tunnel --protocol http2 --no-autoupdate --url http://restapi:8000
    command: tunnel --metrics localhost:0 --no-autoupdate --url http://restapi:8000
    network_mode: service:restapi
    depends_on:
      - restapi
    restart: unless-stopped
    #environment:
    #  - TUNNEL_TRANSPORT_PROTOCOL=http2
    #  - TUNNEL_EDGE_IP_VERSION=4

  conv_lpi:
    build:
      context: ./conv
      dockerfile: Dockerfile.conv_lpi
    environment:
      - CONV_CONTEXT=LPI
    env_file:
      - ./.env
    depends_on:
      - redis
    volumes:
      - ./helper:/app/helper
      - ./logger:/app/logger
      - "/mnt/M2412511_LPI_Qstation/Logger1_100Hz_30sec/data:/app/files/input_100hz"
      - "/mnt/M2412511_LPI_Qstation/Logger1_100Hz_30sec/finished:/app/files/finished_100hz"
      - "/mnt/M2412511_LPI_Qstation/Logger1_100Hz_30sec/stats:/app/files/stats_100hz"
      - "/mnt/M2412511_LPI_Qstation/Logger1_100Hz_30sec/failed:/app/files/failed_100hz"
      - "/mnt/M2412511_LPI_Qstation/Logger2_1Hz_30sec/data:/app/files/input_1hz"
      - "/mnt/M2412511_LPI_Qstation/Logger2_1Hz_30sec/finished:/app/files/finished_1hz"
      - "/mnt/M2412511_LPI_Qstation/Logger2_1Hz_30sec/stats:/app/files/stats_1hz"
      - "/mnt/M2412511_LPI_Qstation/Logger2_1Hz_30sec/failed:/app/files/failed_1hz"
      - "/mnt/M2412511_LPI_Qstation/Logs:/app/logs"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL",
        "redis-cli -h ${REDIS_HOST:-redis} -p ${REDIS_PORT:-6379} \
        GET ${HEALTH_CONTAINER_CONV_LPI:-health:container_conv_lpi} | grep -q '^1$'"]
      interval: 30s
      timeout: 5s
      retries: 3

  conv_sens:
    build:
      context: ./conv
      dockerfile: Dockerfile.conv_sens
    environment:
      - CONV_CONTEXT=SENS
    env_file:
      - ./.env
    volumes:
      - ./helper:/app/helper
      - ./logger:/app/logger
      - "/mnt/M2412511_Sensical/data:/app/files/input"
      - "/mnt/M2412511_Sensical/finished:/app/files/finished"
      - "/mnt/M2412511_Sensical/failed:/app/files/failed"
      - "/mnt/M2412511_LPI_Qstation/Logs:/app/logs"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL",
        "redis-cli -h ${REDIS_HOST:-redis} -p ${REDIS_PORT:-6379} \
        GET ${HEALTH_CONTAINER_CONV_SENS:-health:container_conv_sens} | grep -q '^1$'"]
      interval: 30s
      timeout: 5s
      retries: 3
    
  conv_mist:
    build:
      context: ./conv
      dockerfile: Dockerfile.conv_mist
    environment:
      - CONV_CONTEXT=MIST
    env_file:
      - ./.env
    volumes:
      - ./helper:/app/helper
      - ./logger:/app/logger
      - "C:/Users/oelawad/Desktop/Software/2412511_data/mistras/data:/app/files/input"
      - "C:/Users/oelawad/Desktop/Software/2412511_data/mistras/data_completed:/app/files/finished"
      - "C:/Users/oelawad/Desktop/Software/2412511_data/mistras/stats:/app/files/stats"
      - "C:/Users/oelawad/Desktop/Software/2412511_data/mistras/failed:/app/files/failed"
      - "C:/Users/oelawad/Desktop/Software/2412511_data/logs:/app/logs"
    restart: unless-stopped

  app:
    build:
      context: ./sevenio
      dockerfile: Dockerfile.sevenio
    env_file:
      - ./.env
    # Healthcheck hits the "/" health endpoint
    #healthcheck:
    #  test: ["CMD", "curl", "-fsS", "http://localhost:${PORT}/"]
    #  interval: 10s
    #  timeout: 3s
    #  retries: 10
    restart: unless-stopped

  restapi:
    build:
      context: ./restapi
      dockerfile: Dockerfile.restapi
    env_file:
      - ./.env
    volumes:
      - "/mnt/M2412511_LPI_Qstation/Restapi:/data"
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  ngrok:
    image: ngrok/ngrok:latest
    depends_on:
      - restapi
    command: http restapi:8000
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    ports:
      - "4040:4040"
    restart: unless-stopped

  modbus:
    build:
      context: ./modbus
      dockerfile: Dockerfile.modbus
    env_file:
      - ./.env
    ports:
      - "502:502"
    volumes:
      - ./logger:/app/logger
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "/mnt/M2412511_LPI_Qstation/Logs:/app/logs"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 502"]
      interval: 30s
      timeout: 5s

  uploader:
    build:
      context: ./uploader
      dockerfile: Dockerfile.uploader
    env_file:
      - ./.env
    volumes:
      - ./logger:/app/logger
      - "/mnt/M2412511_LPI_Qstation/Logs:/app/logs"
      - "/mnt/M2412511_LPI_Qstation/Logger2_1Hz_30sec/finished:/app/files/finished_1hz"
      - "/mnt/M2412511_LPI_Qstation/Logger1_100Hz_30sec/finished:/app/files/finished_100hz"      

volumes:
  redis_data:
